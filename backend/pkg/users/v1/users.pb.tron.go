// Code generated by tron1.0.0. DO NOT EDIT.

package users

import (
	context "context"
	runtime "github.com/grpc-ecosystem/grpc-gateway/v2/runtime"
	transport "github.com/loghole/tron/transport"
	grpc "google.golang.org/grpc"
)

// UsersServiceDesc is description for the UsersServer.
type UsersServiceDesc struct {
	svc UsersServer
}

func NewUsersServiceDesc(i UsersServer) transport.ServiceDesc {
	return &UsersServiceDesc{svc: i}
}

func (d *UsersServiceDesc) RegisterGRPC(s *grpc.Server) {
	RegisterUsersServer(s, d.svc)
}

func (d *UsersServiceDesc) RegisterHTTP(mux *runtime.ServeMux) {
	RegisterUsersHandlerServer(context.Background(), mux, d.svc)
}

func (d *UsersServiceDesc) SwaggerDef() []byte {
	return []byte(`{
  "swagger": "2.0",
  "info": {
    "title": "users.proto",
    "version": "version not set"
  },
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/api/v1/user/create": {
      "post": {
        "operationId": "Users_Create",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/users.v1.CreateResp"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/users.v1.CreateReq"
            }
          }
        ],
        "tags": [
          "Users"
        ]
      }
    },
    "/api/v1/user/list/with_badges": {
      "post": {
        "operationId": "Users_ListWithBadges",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/users.v1.ListWithBadgesResp"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/users.v1.ListWithBadgesReq"
            }
          }
        ],
        "tags": [
          "Users"
        ]
      }
    }
  },
  "definitions": {
    "google.protobuf.Any": {
      "type": "object",
      "properties": {
        "typeUrl": {
          "type": "string"
        },
        "value": {
          "type": "string",
          "format": "byte"
        }
      }
    },
    "google.rpc.Status": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/google.protobuf.Any"
          }
        }
      }
    },
    "types.v1.Badge": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "userId": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "point": {
          "$ref": "#/definitions/types.v1.Point"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "types.v1.Point": {
      "type": "object",
      "properties": {
        "x": {
          "type": "number",
          "format": "double"
        },
        "y": {
          "type": "number",
          "format": "double"
        }
      }
    },
    "users.v1.CreateReq": {
      "type": "object",
      "properties": {
        "username": {
          "type": "string"
        },
        "avatar": {
          "type": "string"
        }
      }
    },
    "users.v1.CreateResp": {
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/users.v1.User"
        }
      }
    },
    "users.v1.ListWithBadgesReq": {
      "type": "object"
    },
    "users.v1.ListWithBadgesResp": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/users.v1.User"
          }
        }
      }
    },
    "users.v1.User": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "username": {
          "type": "string"
        },
        "avatar": {
          "type": "string"
        },
        "badges": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/types.v1.Badge"
          }
        }
      }
    }
  }
}
`)
}
